<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.orange.music.dao.SingerMapper">
    <resultMap id="BaseResultMap" type="com.orange.music.domain.Singer">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="pic" property="pic" jdbcType="VARCHAR"/>
        <result column="birth" property="birth" jdbcType="TIMESTAMP"/>
        <result column="location" property="location" jdbcType="VARCHAR"/>
        <result column="introduction" property="introduction" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,name,sex,pic,birth,location,introduction
    </sql>

    <insert id="insert" parameterType="Singer">
        insert into singer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="pic != null">
                pic,
            </if>
            <if test="birth != null">
                birth,
            </if>
            <if test="location != null">
                location,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
        </trim>
        <trim prefix="values(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="sex != null">
                #{sex},
            </if>
            <if test="pic != null">
                #{pic},
            </if>
            <if test="birth != null">
                #{birth},
            </if>
            <if test="location != null">
                #{location},
            </if>
            <if test="introduction != null">
                #{introduction},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="Singer">
        update singer
        <set>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="sex != null">
                sex=#{sex},
            </if>
            <if test="pic != null">
                pic=#{pic},
            </if>
            <if test="birth != null">
                birth=#{birth},
            </if>
            <if test="location != null">
                location=#{location},
            </if>
            <if test="introduction != null">
                introduction=#{introduction},
            </if>
        </set>
        where id=#{id}
    </update>

    <delete id="delete" parameterType="Integer">
        delete from singer where id=#{id}
    </delete>
    
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Integer">
        select <include refid="Base_Column_List"/>
        from singer where id=#{id}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from singer
    </select>

    <select id="selectByName" resultMap="BaseResultMap" parameterType="String">
        select <include refid="Base_Column_List"/>
        from singer where name Like CONCAT('%',#{name},'%')
    </select>

  <select id="selectBySex" resultMap="BaseResultMap" parameterType="Integer">
      select <include refid="Base_Column_List"/>
      from singer where sex=#{sex}
  </select>

</mapper>
